<?xml version="1.0"?>
<!-- 
    注意: 除了手动编辑此文件以外，您还可以使用 
    Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的
     “网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
	<appSettings/>
  <connectionStrings>
    <add name="SherryDBConnection" connectionString="server=(local);uid=sa;pwd=.;database=sherry;"/>
  </connectionStrings>
	<system.web>
		<!-- 
            设置 compilation debug="true" 可将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只应在开发过程中设置 
            此值。

            Visual Basic 选项:
            设置 strict="true" 将禁止所有会导致 
            数据丢失的类型转换。 
            设置 explicit="true" 将强制声明所有变量。
        -->
		<compilation debug="true" strict="false" explicit="true"/>


    <machineKey validation="3DES" validationKey="12F319712F319712F319712F319712F319712F319712F319" decryptionKey="12F319712F319712F319712F319712F319712F319712F319"/>
    <membership>
      <providers>
        <remove name="AspNetSqlMembershipProvider"/>
        <add connectionStringName="SherryDBConnection" enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="true" applicationName="/" requiresUniqueEmail="true" passwordFormat="Encrypted" maxInvalidPasswordAttempts="3" minRequiredPasswordLength="5" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" passwordStrengthRegularExpression="" name="AspNetSqlMembershipProvider" type="System.Web.Security.SqlMembershipProvider"/>
      </providers>
    </membership>
    <roleManager enabled="true" cacheRolesInCookie="true" cookieName=".ASPROLES" cookieRequireSSL="true" defaultProvider="SqlRoleProvider">
      <providers>
        <add connectionStringName="SherryDBConnection" applicationName="/" name="SqlRoleProvider" type="System.Web.Security.SqlRoleProvider"/>
      </providers>
    </roleManager>

    <pages>
      <namespaces>
        <clear/>
        <add namespace="System"/>
        <add namespace="System.Collections"/>
        <add namespace="System.Collections.Specialized"/>
        <add namespace="System.Configuration"/>
        <add namespace="System.Text"/>
        <add namespace="System.Text.RegularExpressions"/>
        <add namespace="System.Web"/>
        <add namespace="System.Web.Caching"/>
        <add namespace="System.Web.SessionState"/>
        <add namespace="System.Web.Security"/>
        <add namespace="System.Web.Profile"/>
        <add namespace="System.Web.UI"/>
        <add namespace="System.Web.UI.WebControls"/>
        <add namespace="System.Web.UI.WebControls.WebParts"/>
        <add namespace="System.Web.UI.HtmlControls"/>
      </namespaces>
    </pages>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 使用的 
            安全身份验证模式，
            以标识传入的用户。 
        -->
    <authentication mode="Forms">
      <forms name="myAuthentication" loginUrl="main.aspx" defaultUrl="main.aspx" protection="All" timeout="60" path="/"/>
    </authentication>
		<!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
	</system.web>
  
  <!--邮件-->

  <system.net>
    <mailSettings>
      <smtp from="forus_2009@sina.com">
        <network host="smtp.sina.com" password="forus2009" userName="forus_2009"/>
      </smtp>
    </mailSettings>
  </system.net>
  
</configuration>
